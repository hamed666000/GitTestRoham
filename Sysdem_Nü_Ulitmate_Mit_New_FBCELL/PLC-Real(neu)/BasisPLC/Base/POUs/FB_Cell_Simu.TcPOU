<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.0">
  <POU Name="FB_Cell_Simu" Id="{90b0363e-e8d1-4afa-a66a-806113cfa97c}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Cell_Simu IMPLEMENTS I_CELL
VAR_INPUT
	
END_VAR
VAR_OUTPUT
END_VAR
VAR
	m_csStateRequest : CELL_ACTION_STATE;
	m_csStateRequestOld : CELL_ACTION_STATE;
	m_csState : CELL_ACTION_STATE;
	m_csStateLastCycle : CELL_ACTION_STATE;
	m_csStateLastAction : CELL_ACTION_STATE;
	
	
	m_csSRWorkingState : CELL_WORKING_STATES := CELL_WORKING_STATES.e_FINISHED;
	m_csSRWorkingStateLast : CELL_WORKING_STATES := CELL_WORKING_STATES.e_FINISHED;
	// Eigenschaften
	m_sName : STRING;
	m_bIsDisassemblyCell : BOOL;
	
	
	m_iWorkpiece : DINT;
	m_sWorkpieceID : STRING;
	

	m_csCellState : CELL_STATE;
	m_csCellStateLast : CELL_STATE;

	fbInterface : FB_InterfaceSimulated; //nn wenn keine Eingeänge vorhanden sind, nach zeiten wechsel
	fbClamp : FB_Clamp; 
	
	m_sErrorString : STRING;
	
	// DataServices
	
	fbDataServicePut : FB_DataService;
	m_bDataServicePutEnable : BOOL;
	fbDataServiceGet : FB_DataService;
	m_bDataServiceGetEnable : BOOL;
	m_sConfigString : STRING;
	m_sConfigStringEndGet : STRING  := '_Get.exe';
	m_sConfigStringEndPut : STRING  := '_Put.exe';
	m_sDataServiceDir: STRING  := 'C:\Users\\Nübel\Desktop\Sysdem_Nü_Ulitmate\CUTS\';
	m_sDataServiceIP: STRING  := '192.168.74.113.1.1';
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
]]></ST>
    </Implementation>
    <Method Name="GetErrorString" Id="{213f8c3d-aa28-49a4-973e-d89786a7c39d}">
      <Declaration><![CDATA[METHOD GetErrorString : STRING
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetName" Id="{53537682-22dd-4ddc-94b2-04bfc21cf8e3}">
      <Declaration><![CDATA[METHOD GetName : STRING
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetName := m_sName;]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetState" Id="{6bdd8683-f79e-48c4-891d-af525f1b844d}">
      <Declaration><![CDATA[METHOD PUBLIC GetState : INT
VAR_INPUT
	
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetState := m_csState;]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetWorkpiece" Id="{10cd00ff-56d8-462b-9f90-215d2ae197df}">
      <Declaration><![CDATA[METHOD GetWorkpiece : DINT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetWorkpiece := m_iWorkpiece;]]></ST>
      </Implementation>
    </Method>
    <Method Name="IsDisassemblyCell" Id="{2959eea6-2207-40e0-a4c1-e1b7a9d5356d}">
      <Declaration><![CDATA[METHOD IsDisassemblyCell : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IsDisassemblyCell := m_bIsDisassemblyCell;]]></ST>
      </Implementation>
    </Method>
    <Method Name="IsError" Id="{94c3cb00-4d5f-4828-8e1e-55e178e7ca96}">
      <Declaration><![CDATA[METHOD IsError : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF m_csCellState = CELL_STATE.e_ERROR THEN
	IsError := TRUE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="IsIdle" Id="{6eef8cd1-6008-4e80-941d-3fa3edfeee69}">
      <Declaration><![CDATA[METHOD IsIdle : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF m_csCellState = CELL_STATE.e_IDEL THEN
	IsIdle := TRUE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="IsVirtualCell" Id="{ce499034-0ac4-421d-9529-39e548a00af5}">
      <Declaration><![CDATA[METHOD IsVirtualCell : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IsVirtualCell :=FALSE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="RequestActionState" Id="{0764b7f1-e257-4115-97a9-74baba2b89d6}">
      <Declaration><![CDATA[METHOD PUBLIC RequestActionState : BOOL
VAR_INPUT
	csStateRequest : CELL_ACTION_STATE;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[m_csStateRequest := csStateRequest;]]></ST>
      </Implementation>
    </Method>
    <Method Name="RequestWork" Id="{5dac8d6b-db50-427d-92cb-91e2646d81b8}">
      <Declaration><![CDATA[METHOD RequestWork : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[m_csCellState := CELL_STATE.e_WORKING;]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetDisassemblyCell" Id="{4846ea1d-9b95-479d-8a8b-1ac0b99f084b}">
      <Declaration><![CDATA[METHOD SetDisassemblyCell : BOOL
VAR_INPUT
	bIsDisassemblyCell : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[m_bIsDisassemblyCell := bIsDisassemblyCell;]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetGetDataServiceEnable" Id="{73f0c85e-642b-4b22-afcd-1a4f39e46ac6}">
      <Declaration><![CDATA[METHOD SetGetDataServiceEnable : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[m_bDataServiceGetEnable := TRUE;
SetGetDataServiceEnable := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetName" Id="{644d4739-81c7-4e3b-aeae-221308740047}">
      <Declaration><![CDATA[METHOD SetName : BOOL
VAR_INPUT
	sName :string ;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[m_sName := sName;]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetPutDataServiceEnable" Id="{598094ea-cf56-44a7-8631-e7c9e0374c58}">
      <Declaration><![CDATA[METHOD SetPutDataServiceEnable : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[m_bDataServicePutEnable := TRUE;
SetPutDataServiceEnable := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetVirtualCell" Id="{bb58a0c5-1f2d-401e-a043-cac1c9e4f757}">
      <Declaration><![CDATA[METHOD SetVirtualCell : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetWorkpiece" Id="{643836f6-67d4-453a-ae9b-3f6a82c680f9}">
      <Declaration><![CDATA[METHOD SetWorkpiece : BOOL
VAR_INPUT
	iWorkpiece : DINT;
	sWorkpieceID : STRING;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[m_iWorkpiece := iWorkpiece;
m_sWorkpieceID := sWorkpieceID;]]></ST>
      </Implementation>
    </Method>
    <Method Name="StateMachine" Id="{f4968e87-f579-4db6-886d-d3b3276eaa20}">
      <Declaration><![CDATA[METHOD PUBLIC StateMachine : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
fbInterface();
fbClamp();



// Error-Abfragen
IF fbClamp.IsError() THEN
	m_csCellState := CELL_STATE.e_ERROR; 
	m_sErrorString := 'CLAMP-Error: Clamp is closed without Workpiece';
END_IF


//Zellen Zustandsmaschine

CASE m_csCellState OF 
	CELL_STATE.e_IDEL:
		fbClamp.SetOpenClamp();	
	
		;
 	CELL_STATE.e_MHS_ACTION;
		//SubRoutine für Aktion beim beladen aktuell leer da alles vom MHS gesteuert wird 
	
		;
	CELL_STATE.e_WORKING:
		//SubRoutine zum Durchführen einer Bearbeitung
		
		IF NOT (m_csCellStateLast = m_csCellState) THEN
			m_csSRWorkingState := CELL_WORKING_STATES.e_START;
			IF m_bDataServiceGetEnable THEN
				fbDataServiceGet.SetNetIP('192.168.74.113.1.1');
				fbDataServiceGet.SetWorkingDirectory('C:\Users\Nübel\Desktop\Sysdem_Nü_Ulitmate\CUTS');
				m_sConfigString := 'C:\Users\Nübel\Desktop\Sysdem_Nü_Ulitmate\CUTS\';
				m_sConfigString := CONCAT(m_sConfigString , m_sName); // erstellen des Pfades der Applikation 
				m_sConfigString := CONCAT(m_sConfigString , m_sConfigStringEndGet);
				fbDataServiceGet.SetCommandLine(m_sWorkpieceID);
				fbDataServiceGet.SetPathOfApplication(m_sConfigString);
				fbDataServiceGet.StartDataService();
			END_IF
		END_IF
			
		CASE m_csSRWorkingState OF
			
			CELL_WORKING_STATES.e_START:
				
				IF NOT (m_csSRWorkingStateLast = m_csSRWorkingState )THEN
					m_csStateRequest := CELL_ACTION_STATE.e_Startabel;
				END_IF
				//m_csSRWorkingState:= CELL_WORKING_STATES.e_FINISHED;
				
				IF m_csState = CELL_ACTION_STATE.e_Startabel AND (fbDataServiceGet.IsFinished() OR NOT(m_bDataServiceGetEnable) )  THEN // Zelle bereit zum Starten und DataServiceGet fertig oder nicht konfiguriert
					m_csSRWorkingState:= CELL_WORKING_STATES.e_WORKING;
					fbDataServiceGet.SetIdle();
					m_csStateRequest:= CELL_ACTION_STATE.e_Running;
				END_IF
				
				
			CELL_WORKING_STATES.e_WORKING:
				IF NOT (m_csSRWorkingStateLast = m_csSRWorkingState) THEN
					m_csStateRequest := CELL_ACTION_STATE.e_Running;
				END_IF
				
				IF m_csState = CELL_ACTION_STATE.e_Finished THEN
					m_csSRWorkingState := CELL_WORKING_STATES.e_FINISHED;
					IF m_bDataServicePutEnable THEN
						fbDataServicePut.SetNetIP('192.168.74.113.1.1');
						fbDataServicePut.SetWorkingDirectory('C:\Users\Nübel\Desktop\Sysdem_Nü_Ulitmate\CUTS');
						m_sConfigString := 'C:\Users\Nübel\Desktop\Sysdem_Nü_Ulitmate\CUTS\';						
						m_sConfigString := CONCAT(m_sConfigString , m_sName); // erstellen des Pfades der Applikation 
						m_sConfigString := CONCAT(m_sConfigString , m_sConfigStringEndPut);// erstellen des Pfades der Applikation
						fbDataServicePut.SetCommandLine(m_sWorkpieceID);
						fbDataServicePut.SetPathOfApplication(m_sConfigString);
						fbDataServicePut.StartDataService();
						m_csSRWorkingState := e_DATAPUT;
					END_IF
		
				END_IF
			CELL_WORKING_STATES.e_DATAPUT:
				
					IF fbDataServicePut.IsFinished() THEN
						fbDataServicePut.SetIdle();
						m_csSRWorkingState := CELL_WORKING_STATES.e_FINISHED;
					END_IF
					
					IF fbDataServicePut.IsError() THEN
						fbDataServicePut.SetIdle();
						m_csSRWorkingState := CELL_STATE.e_ERROR;
					END_IF
					
			CELL_WORKING_STATES.e_FINISHED:
				m_csCellState := CELL_STATE.e_IDEL;
			
		END_CASE		
		
	CELL_STATE.e_ERROR:
		m_csState :=CELL_ACTION_STATE.e_ToEmergencyStop;
	
		
END_CASE
m_csSRWorkingStateLast := m_csSRWorkingState;
m_csCellStateLast := m_csCellState;

IF NOT (m_csStateRequestOld = m_csStateRequest) THEN
	m_csState := m_csStateRequest - 1;
	m_csStateRequestOld := m_csStateRequest;
END_IF


// Aktions Zustandsmaschine
CASE m_csState OF 
	CELL_ACTION_STATE.e_ToStandby:
		IF NOT (m_csStateLastCycle = m_csState) THEN
			fbInterface.SetStandby(TRUE);
			m_csStateLastAction := m_csStateLastCycle;
		END_IF
		
		IF fbInterface.GetStandby() THEN
			m_csState := e_Standby; 
		END_IF
		
	CELL_ACTION_STATE.e_Standby :
	
		IF NOT (m_csStateLastCycle = m_csState) THEN
			m_csStateLastAction := m_csStateLastCycle;
		END_IF
		fbInterface.SetStandby(FALSE);
		
	CELL_ACTION_STATE.e_ToLoadPos:
	
		IF NOT (m_csStateLastCycle = m_csState) THEN
			m_csStateLastAction := m_csStateLastCycle;
			fbInterface.SetMoveToLoad(TRUE);
			fbClamp.SetOpenClamp();
		END_IF
		
		IF fbInterface.GetLoadPos() AND fbClamp.IsOpen() THEN
			m_csState := e_LoadPos; 
		END_IF
		
		
	CELL_ACTION_STATE.e_LoadPos:
	
		IF NOT (m_csStateLastCycle = m_csState) THEN
			m_csStateLastAction := m_csStateLastCycle;
		END_IF
		fbInterface.SetMoveToLoad(FALSE);
				
		
	CELL_ACTION_STATE.e_ToStartabel:
	
		IF NOT (m_csStateLastCycle = m_csState) THEN
			m_csStateLastAction := m_csStateLastCycle;
			fbClamp.SetCloseClampFull();
		END_IF
		
		
		IF  fbClamp.IsClosedFull() THEN
			m_csState := e_Startabel; 
		END_IF
		
	CELL_ACTION_STATE.e_Startabel:
	
		IF NOT (m_csStateLastCycle = m_csState) THEN
			m_csStateLastAction := m_csStateLastCycle;
			
		END_IF
		
	CELL_ACTION_STATE.e_ToRunning:
	
		IF NOT (m_csStateLastCycle = m_csState) THEN
			m_csStateLastAction := m_csStateLastCycle;
			fbInterface.SetStart(TRUE);
		END_IF
		
		IF fbInterface.GetIsRunning() THEN
			m_csState := CELL_ACTION_STATE.e_Running; 
		END_IF
		
	CELL_ACTION_STATE.e_Running:
	
		IF NOT (m_csStateLastCycle = m_csState) THEN
			m_csStateLastAction := m_csStateLastCycle;
		END_IF
		fbInterface.SetStart(FALSE);
		IF fbInterface.GetFinished() THEN
			m_csState := CELL_ACTION_STATE.e_Finished;		
		END_IF
	CELL_ACTION_STATE.e_Finished:
		IF NOT (m_csStateLastCycle = m_csState) THEN
			m_csStateLastAction := m_csStateLastCycle;
		END_IF
		
	CELL_ACTION_STATE.e_ToUnLoadPos:
 
		IF NOT (m_csStateLastCycle = m_csState) THEN
			m_csStateLastAction := m_csStateLastCycle;
			fbClamp.SetOpenClamp();
			fbInterface.SetMoveToUnload(TRUE);
			
		END_IF
		
		
		IF fbInterface.GetUnloadPos() AND fbClamp.IsOpen() THEN
			m_csState := e_UnLoadPos; 
			fbInterface.SetMoveToUnload(FALSE);
		END_IF
		
	CELL_ACTION_STATE.e_UnLoadPos:
	
		IF NOT (m_csStateLastCycle = m_csState) THEN
			m_csStateLastAction := m_csStateLastCycle;
		END_IF
		
	CELL_ACTION_STATE.e_ToEmergencyStop:
	
		IF NOT (m_csStateLastCycle = m_csState) THEN
			m_csStateLastAction := m_csStateLastCycle;
		END_IF
		
		
		IF fbInterface.GetEmergencyStop() THEN
			m_csState := e_EmergencyStop; 
		END_IF
		
	CELL_ACTION_STATE.e_EmergencyStop:
	
		IF NOT (m_csStateLastCycle = m_csState) THEN
			m_csStateLastAction := m_csStateLastCycle;
		END_IF
		
	CELL_ACTION_STATE.e_ToEmergencyOff:
	
		IF NOT (m_csStateLastCycle = m_csState) THEN
			m_csStateLastAction := m_csStateLastCycle;
		END_IF
		
		
		IF fbInterface.GetEmergencyStop() THEN
			m_csState := e_EmergencyOff; 
		END_IF
		
	CELL_ACTION_STATE.e_EmergencyOff:
	
		IF NOT (m_csStateLastCycle = m_csState) THEN
			m_csStateLastAction := m_csStateLastCycle;
		END_IF
		
	ELSE
		IF NOT (m_csStateLastCycle = m_csState) THEN
			m_csStateLastAction := m_csStateLastCycle;
		END_IF
		
END_CASE

IF m_bDataServiceGetEnable THEN
	fbDataServiceGet();
END_IF
IF m_bDataServicePutEnable THEN	
	fbDataServicePut();
END_IF

m_csStateLastCycle := m_csState;]]></ST>
      </Implementation>
    </Method>
    <Method Name="StateMachineProfibus" Id="{96fa93fd-1e80-4d20-abc6-b39d2987a0d4}">
      <Declaration><![CDATA[METHOD StateMachineProfibus : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Cell_Simu">
      <LineId Id="208" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_Cell_Simu.GetErrorString">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Cell_Simu.GetName">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Cell_Simu.GetState">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Cell_Simu.GetWorkpiece">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Cell_Simu.IsDisassemblyCell">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Cell_Simu.IsError">
      <LineId Id="6" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Cell_Simu.IsIdle">
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="1" />
    </LineIds>
    <LineIds Name="FB_Cell_Simu.IsVirtualCell">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Cell_Simu.RequestActionState">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Cell_Simu.RequestWork">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Cell_Simu.SetDisassemblyCell">
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="FB_Cell_Simu.SetGetDataServiceEnable">
      <LineId Id="6" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Cell_Simu.SetName">
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="FB_Cell_Simu.SetPutDataServiceEnable">
      <LineId Id="5" Count="1" />
    </LineIds>
    <LineIds Name="FB_Cell_Simu.SetVirtualCell">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Cell_Simu.SetWorkpiece">
      <LineId Id="5" Count="0" />
      <LineId Id="11" Count="0" />
    </LineIds>
    <LineIds Name="FB_Cell_Simu.StateMachine">
      <LineId Id="321" Count="260" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Cell_Simu.StateMachineProfibus">
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>